<cfswitch expression="#thisTag.executionMode#">
<cfcase value="start">
  <cfsilent>
	<cfif not thisTag.hasEndTag>
	  <cfthrow message="jTab requires an end tag.">
	</cfif>
	
	<!--- Skin --->
	<cfparam name="attributes.skin" default="default">
	<cfif structKeyExists(request, "jComponent") AND structKeyExists(request.jComponent, "skins") AND structKeyExists (request.jComponent.skins, attributes.skin)>
	  <cfloop collection="#request.jComponent.skins[attributes.skin]#" item="i">
  	  <cfif not structKeyExists(attributes, i)>
  		<cfset attributes[i] = request.jComponent.skins[attributes.skin][i]>
  	  </cfif>
	  </cfloop>
	</cfif>
	<cfparam name="attributes.orientation" default="horizontal">
	<cfparam name="attributes.width" default="100%">
	<cfparam name="attributes.height" default="400">
	<cfparam name="attributes.border" default="1">
	<cfparam name="attributes.borderColor" default="666666">
	<cfparam name="attributes.bgColor" default="FFFFFF">
	<cfparam name="attributes.name" default="jt#replaceNoCase(createUuid(), "-", "", "all")#">
	<cfparam name="attributes.onChange" default="">
	
	<cfif attributes.height contains "%">
	  <cfthrow message="jComponent error: jTab does not support percentage-based heights.">
	</cfif>
	
	<cfif reFindNoCase("[^0-9A-Za-z]", attributes.name) or isNumeric(left(attributes.name, 1))>
	  <cfthrow message="jComponent error:  The ID attribute may only contain letters and numbers, and may not start with a number.">
	</cfif> 
	
	<cfset uniqueNav = replaceNoCase(createUuid(), "-", "", "all")>
	<cfset items = arrayNew(1)>
	<cfset panes = arrayNew(1)>
  </cfsilent>
  <cfoutput>
  <cfset msg="<!-- Control generated by jComponents 1.0, copyright #datePart("yyyy", now())# joe rinehart, joe.rinehart@gmail.com, http://clearsoftware.net/jComponents -->">
  <cfoutput>#msg#</cfoutput>
  <script>
	<cfif not isDefined("request.jComponent.init")>
	  <cfset request.jComponent.init = true>
	  jComponents = new Object;
	  jComponents.go = function() {};
	  jComponents.getComponent = function(id) {
		return jComponents[id];
	  }

	  jComponents.setBarColor = function (bgIdArray, fgIdArray, bgColor, fgColor) {
		var i=0
		for (i=0;i<bgIdArray.length;i++) try { (document.getElementById(bgIdArray[i]).style.background = bgColor) } catch(e) {};
		for (i=0;i<fgIdArray.length;i++) try { (document.getElementById(fgIdArray[i]).style.color = fgColor) } catch(e) {};
	  }
	</cfif>
	
	<cfif not isDefined("request.jComponent.tab")>
	  <cfset request.jComponent.tab = true>
	  jComponents.setTab = function(id, index) {
		var tabName = jComponents[id].panes[index];
  
		jComponents[id].activePane = tabName;
  
		for (var i=0;i<jComponents[id].panes.length;i++) {
		  if (jComponents[id].panes[i] == tabName) jComponents[id].selectedIndex = i;
  
		  jComponents.setBarColor(["tab" + jComponents[id].panes[i], "tab1" + jComponents[id].panes[i], "tab2" + jComponents[id].panes[i]], ["t" + jComponents[id].panes[i]], '##' + jComponents[id][jComponents[id].panes[i]].inactiveBgColor, '##' + jComponents[id][jComponents[id].panes[i]].inactiveFgColor);
		  var tab = document.getElementById("tab" + jComponents[id].panes[i]);
		  var pane = document.getElementById("pane" + jComponents[id].panes[i]);
		  var icon = document.getElementById("i" + jComponents[id].panes[i]);
		  var cIcon = document.getElementById("ic" + jComponents[id].panes[i]);
		  pane.style.display = 'none';
		  try {cIcon.style.display = '';} catch(e) {};
		  try {icon.style.display = 'none';} catch(e) {};
  
		  if (jComponents[id].orientation == "horizontal") {
			tab.style.borderBottom = '1px ##' + jComponents[id][jComponents[id].panes[i]].borderColor + ' Solid';
		  } else { 
			tab.style.borderRight = '1px ##' + jComponents[id][jComponents[id].panes[i]].borderColor + ' Solid';
		  }
		}
  
		jComponents.setBarColor(["tab" + tabName, "tab1" + tabName, "tab2" + tabName], ["t" + tabName], '##' + jComponents[id][tabName].bgColor, '##' + jComponents[id][tabName].titleFgColor);
		var tab = document.getElementById("tab" + tabName);
		var pane = document.getElementById("pane" + tabName);
		var icon = document.getElementById("i" + tabName);
		var cIcon = document.getElementById("ic" + tabName);
		pane.style.display = '';
		try {icon.style.display = '';} catch(e) {};
		try {cIcon.style.display = 'none';} catch(e) {};
		<cfif attributes.orientation eq "horizontal">
		  tab.style.borderBottom = '1px ##' + jComponents[id][tabName].bgColor + ' Solid';
		<cfelse>
		  tab.style.borderRight = '1px ##' + jComponents[id][tabName].bgColor + ' Solid';
		</cfif>
			  
		jComponents[id].onChange();
	  }
	</cfif>
	
	jComponents["#attributes.name#"] = {panes:new Array,name:"#attributes.name#",activePane:"",selectedIndex:0,orientation:"<cfif attributes.orientation eq "horizontal">horizontal<cfelse>vertical</cfif>",onChange:function() {<cfif len(attributes.onChange)>#attributes.onChange#();</cfif>return}};
  </script>
  
  <table cellpadding="0" cellspacing="0" border="0"
	style="width:#attributes.width#<cfif not attributes.width contains "%">px</cfif>;
	<cfif attributes.orientation neq "horizontal">
		border-top:1px ###attributes.borderColor# Solid;
	</cfif>"
  >
  <tr>
	<td valign="top"
	  <cfif attributes.orientation neq "horizontal">
		style="height:100%;border-left:1px ###attributes.borderColor# Solid;border-bottom:1px ###attributes.borderColor# Solid"
	  </cfif>
	>
  </cfoutput>
</cfcase>
<cfcase value="end">
  </td></tr></table></td></tr></table>
  <script>
	<cfoutput>
	  jComponents.setTab("#attributes.name#", <cfif isDefined("openTabIndex")>#openTabIndex#<cfelse>0</cfif>);
	</cfoutput>
  </script>
</cfcase>
</cfswitch>

